name: Data Publish

on:
  push:
  workflow_dispatch:
#  schedule:
#    - cron: '0 17 * * *'

jobs:
  data_crawl:
    name: Data Crawl
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependences on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Install chrome stable
        shell: bash
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
          sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends google-chrome-stable unzip
      - name: Install chrome driver
        shell: bash
        run: |
          wget -qO /tmp/chromedriver.zip "http://chromedriver.storage.googleapis.com/$(wget -qO- chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip"
          sudo unzip -qq /tmp/chromedriver.zip chromedriver -d /usr/local/bin/
          which chromedriver
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
          python -m pixiv.web --help
      - name: Run Crawler Code
        env:
          CI: 'true'
        shell: bash
        run: |
          echo 233
#          mkdir -p ${{ matrix.game }}
#          python -m gchar.games.${{ matrix.game }} update -o ${{ matrix.game }}/index.json
#          python -m gchar.resources.danbooru update -g ${{ matrix.game }} -o ${{ matrix.game }}/danbooru_tags.json
#          zip -r ${{ matrix.game }}.zip ${{ matrix.game }}

#  data_upload:
#    name: Data Upload
#    runs-on: ${{ matrix.os }}
#    needs: [ data_crawl ]
#    strategy:
#      fail-fast: false
#      matrix:
#        os:
#          - 'ubuntu-latest'
#        python-version:
#          - '3.8'
#
#    steps:
#      - name: Prepare the repository
#        shell: bash
#        run: |
#          sudo apt-get install -y tree
#          git clone https://huggingface.co/datasets/deepghs/game_characters
#          ls -al game_characters
#      - name: Download from artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: character-database
#          path: game_characters
#      - name: See what is in this path
#        shell: bash
#        run: |
#          cd game_characters
#          for zfile in *.zip; do unzip -o $zfile; done
#          rm -rf *.zip
#          tree .
#      - name: Push models to hugging face repostory
#        env:
#          HF_TOKEN: ${{ secrets.HF_TOKEN }}
#        run: |
#          cd game_characters
#          git config user.name 'narugo1992'
#          git config user.email 'narugo@126.com'
#          git add -A && git commit -a -m "dev(narugo): auto sync $(date -R)"
#          git push https://narugo:$HF_TOKEN@huggingface.co/datasets/narugo/pixiv_session main
#      - name: Get the Numbers
#        run: |
#          echo "UPDATE_DATE=$(date +'%Y-%m-%d %H:%M %Z')" >> $GITHUB_ENV
#      - name: Create Update Time Badge
#        uses: schneegans/dynamic-badges-action@v1.0.0
#        with:
#          auth: ${{ secrets.GIST_SECRET }}
#          gistID: ${{ secrets.BADGE_GIST_ID }}
#          filename: data_last_update.json
#          label: Data Updated
#          message: ${{ env.UPDATE_DATE }}
#          color: yellowgreen
